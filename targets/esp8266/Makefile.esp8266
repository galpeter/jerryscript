# Copyright JS Foundation and other contributors, http://js.foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# use TAB-8

CURDIR	= `pwd`
ESP_SDK_PATH	?= $(SDK_PATH)
ESP_LIB	= $(ESP_SDK_PATH)/lib
TYPE	= release
INTERM	= build/obj-esp8266
SRCPATH	= targets/esp8266/source
COPYTARGET	= targets/esp8266/libs
USBDEVICE	?= /dev/ttyUSB0
JERRYHEAP	?= 20
ESPTOOL	?= $(SDK_PATH)/../esptool-py/esptool.py

# compile flags
ESP_CFLAGS := -D__TARGET_ESP8266 -D__attr_always_inline___=
ESP_CFLAGS += -Wl,-EL -fno-inline-functions
ESP_CFLAGS += -ffunction-sections -fdata-sections
ESP_CFLAGS += -mlongcalls -mtext-section-literals -mno-serialize-volatile

MFORCE32 = `xtensa-lx106-elf-gcc --help=target | grep mforce-l32`
ifeq ($(MFORCE32),)
	# Your compiler supports the -mforce-l32 flag which means that
	# constants can be placed in ROM to free additional RAM
	ESP_CFLAGS += -DJERRY_CONST_DATA="__attribute__((aligned(4))) __attribute__((section(\".irom.text\")))"
endif

ifeq ($(MFORCE32),)
	ESP_CFLAGS += -mforce-l32
endif

.PHONY: jerry js2c mkbin check-env flash clean

all: clean check-env jerry js2c mkbin

jerry:
	mkdir -p $(INTERM)
	mkdir -p $(COPYTARGET)
	cmake -B$(INTERM) -H./ \
	 -DENABLE_LTO=OFF \
	 -DFEATURE_VALGRIND=OFF \
	 -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain_external.cmake \
	 -DEXTERNAL_CMAKE_SYSTEM_PROCESSOR=xtensia-lx106 \
	 -DEXTERNAL_CMAKE_C_COMPILER=xtensa-lx106-elf-gcc \
	 -DEXTERNAL_CMAKE_C_COMPILER_ID=GNU \
	 -DJERRY_LIBC=OFF \
	 -DJERRY_CMDLINE=OFF \
	 -DENABLE_ALL_IN_ONE=ON \
	 -DEXTERNAL_COMPILE_FLAGS="$(ESP_CFLAGS)" \
	 -DMEM_HEAP_SIZE_KB=$(JERRYHEAP)

	 make -C$(INTERM) jerry-core jerry-port-default-minimal jerry-ext
	 	cp $(INTERM)/lib/libjerry-core.a $(COPYTARGET)/libjerry-core.a
	 	cp $(INTERM)/lib/libjerry-libm.a $(COPYTARGET)/libjerry-libm.a

js2c:
	cd targets/esp8266; ../../tools/js2c.py

mkbin:
	cd targets/esp8266;	\
	make clean;	\
	make BOOT=none APP=0 SPI_SPEED=40 SPI_MODE=DIO SPI_SIZE_MAP=4;	\

check-env:
ifndef SDK_PATH
	$(error SDK_PATH is undefined for ESP8266)
endif
ifndef BIN_PATH
	$(error BIN_PATH is undefined for ESP8266)
endif

flash:
	$(ESPTOOL) --port $(USBDEVICE) write_flash \
	 0x00000 $(BIN_PATH)/eagle.flash.bin \
	 0x20000 $(BIN_PATH)/eagle.irom0text.bin \
	 0x3FC000 $(SDK_PATH)/bin/esp_init_data_default.bin

clean:
	rm -rf $(INTERM)
